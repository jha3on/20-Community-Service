<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="app.community.mapper.UserMapper">
  <!-- Java-MySQL Mapper -->
  <resultMap id="UserMap" type="User">
    <result property="id" column="id"/>
    <result property="email" column="email"/>
    <result property="password" column="password"/>
    <result property="name" column="name"/>
    <result property="phone" column="phone"/>
    <result property="nickname" column="nickname"/>
    <result property="userRoleType" column="user_role_type"/>
    <result property="userStatus" column="user_status"/>
    <result property="createdAt" column="created_at"/>
    <result property="updatedAt" column="updated_at"/>
  </resultMap>

  <!-- 계정 등록 -->
  <insert id="createUser" parameterType="User">
    INSERT
    INTO user (email, password, name, phone, nickname)
    VALUES (#{email}, #{password}, #{name}, #{phone}, #{nickname})
  </insert>

  <!-- 이메일 중복 검사 -->
  <select id="countUserByEmail" parameterType="string" resultType="int">
    SELECT COUNT(*)
    FROM user
    WHERE email = #{email}
  </select>

  <!-- 연락처 중복 검사 -->
  <select id="countUserByPhone" parameterType="string" resultType="int">
    SELECT COUNT(*)
    FROM user
    WHERE phone = #{phone}
  </select>

  <!-- 닉네임 중복 검사 -->
  <select id="countUserByNickname" parameterType="string" resultType="int">
    SELECT COUNT(*)
    FROM user
    WHERE nickname = #{nickname}
  </select>

  <!-- 전체 계정 개수 조회 -->
  <select id="countAllUser" parameterType="UserStatus" resultType="int">
    SELECT COUNT(*)
    FROM user
    WHERE user_status = #{userStatus}
  </select>

  <!-- 계정 로그인 (스프링 시큐리티를 사용하므로 이메일 조건만 지정한다.) -->
  <select id="selectUserByEmail" parameterType="string" resultType="User">
    SELECT *
    FROM user
    WHERE email = #{email}
  </select>

  <!-- 계정 상세 조회 -->
  <select id="selectUserByUser" resultType="User">
    SELECT *
    FROM user
    <choose>
      <when test="userRoleType.name() == 'ROLE_SYSOP'">WHERE email = #{email}</when>
      <otherwise>WHERE email = #{email} AND password = #{password}</otherwise>
    </choose>
  </select>

  <!-- 계정 목록 조회 -->
  <select id="selectAllUser" parameterType="UserStatus" resultType="User">
    SELECT *
    FROM user
    WHERE user_status = #{userStatus}
  </select>

  <!-- 계정 이메일 수정 -->
  <update id="updateUserByEmail" parameterType="User">
    UPDATE user
    SET email = #{email}
    WHERE email = #{email} AND password = #{password}
  </update>

  <!-- 계정 비밀번호 수정 -->
  <update id="updateUserByPassword" parameterType="User">
    UPDATE user
    SET password = #{password}
    WHERE email = #{email} AND password = #{password}
  </update>

  <!-- 계정 이름 수정 -->
  <update id="updateUserByName" parameterType="User">
    UPDATE user
    SET name = #{name}
    WHERE email = #{email} AND password = #{password}
  </update>

  <!-- 계정 연락처 수정 -->
  <update id="updateUserByPhone" parameterType="User">
    UPDATE user
    SET phone = #{phone}
    WHERE email = #{email} AND password = #{password}
  </update>

  <!-- 계정 닉네임 수정 -->
  <update id="updateUserByNickName" parameterType="User">
    UPDATE user
    SET nickname = #{nickname}
    WHERE email = #{email} AND password = #{password}
  </update>

  <!-- 계정 권한 수정 -->
  <update id="updateUserByUserRoleType">
    UPDATE user
    SET user_role_type = #{userRoleType}
    WHERE email = #{email}
  </update>

  <!-- 계정 활성 여부 수정 -->
  <update id="updateUserByUserStatus">
    UPDATE user
    SET user_status = #{userStatus}
    <choose>
      <when test="userRoleType.name() == 'ROLE_SYSOP'">WHERE email = #{email}</when>
      <otherwise>WHERE email = #{email} AND password = #{password}</otherwise>
    </choose>
  </update>

  <!-- 계정 로그인 일자 수정 -->
  <update id="updateUserByUpdatedAt" parameterType="string">
    UPDATE user
    SET updated_at = now()
    WHERE email = #{email}
  </update>

  <!-- 계정 수정 -->
  <update id="updateUser" parameterType="User">
    UPDATE user
    <set>
      <if test="email != null">email = #{email},</if>
      <if test="name != null">name = #{name},</if>
      <if test="phone != null">phone = #{phone},</if>
      <if test="nickname != null">nickname = #{nickname}</if>
    </set>
    WHERE id = #{id}
  </update>
</mapper>